# -*- mode: sh; -*-
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

if [[ -s "${ZDOTDIR:-$HOME}/.zsh/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zsh/init.zsh"
fi

# Customize to your needs...

# Aliases

alias g="git"
alias gcue='git config user.email "$COMPANY_EMAIL"'
alias sane="stty sane"
alias killrunserver='pkill -f runserver'
alias killjedi='pkill -f jediepcserver'
alias ads='adb -d shell input keyevent 82'
alias adbi='adb -d install'
alias startavd='${ANDROID_HOME}/tools/emulator -avd Pixel_2_API_26 > /dev/null 2>&1 &'
alias rna='node_modules/.bin/react-native run-android'
alias rnr='adb -d reverse tcp:8081 tcp:8081'
alias rnl='adb logcat *:S ReactNative:V ReactNativeJS:V'

# OS specific

if [[ "$OSTYPE" == darwin* ]]; then
  # OS X-specific aliases
  alias find="$BREW_PREFIX/bin/gfind"
  alias xargs="$BREW_PREFIX/bin/gxargs"

  PG_DIR="$BREW_PREFIX/var/postgres"
  alias pg_start="pg_ctl -D $PG_DIR -l $PG_DIR/server.log start"
  alias pg_stop="pg_ctl -D $PG_DIR stop -s -m fast"
fi

# Python

function pyclean() {
  local places=${*:-'.'}
  find $places -type f -name "*.py[co]" -delete
  find $places -type d -name "__pycache__" -delete
  find $places -type d -name ".mypy_cache" -delete
}

export PIP_REQUIRE_VIRTUALENV=true

if (( $+commands[virtualenvwrapper.sh] )); then
  export WORKON_HOME="$HOME/.virtualenvs"
  [[ -n $BREW_PREFIX ]] && export VIRTUALENVWRAPPER_PYTHON="$BREW_PREFIX/bin/python3"
  VIRTUAL_ENV_DISABLE_PROMPT=1
  source "$commands[virtualenvwrapper.sh]"
  alias wo="workon"
fi

# npm

if [[ -s "$HOME/.nvm/nvm.sh" ]]; then
  source "$HOME/.nvm/nvm.sh" --no-use
fi

# Docker

if (( $+commands[docker] )); then
  alias dk='docker'
  alias dkc='docker-compose'
  alias dkps='docker ps'
  alias dkpsa='docker ps -a'
  alias dkR='docker run -it --rm'
  alias dkE='docker exec -it'
  dkstop() { docker stop $(docker ps -a -q); }
  dkrm() { docker rm $(docker ps -a -q); }
fi

# Misc

if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

# Load local zshrc

if [[ -s "$HOME/.zshrc.local" ]]; then
  source "$HOME/.zshrc.local"
fi
